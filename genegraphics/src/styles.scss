// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.
@use "./_palettes.scss" as custom_palettes;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
@import "~@fontsource/open-sans/400.css";
@import "~@fontsource/roboto/400.css";
@import "~@fontsource/roboto-mono/400.css";
@import "~@fontsource/source-code-pro/400.css";
@import "~@fontsource/raleway/400.css";
@import "~@fontsource/quicksand/400.css";
@import "~@fontsource/material-icons/400.css";
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$genegraphics-primary: mat.define-palette(
  custom_palettes.$gg-blue-palette,
  500,
  300,
  900
);
$genegraphics-accent: mat.define-palette(
  custom_palettes.$gg-green-palette,
  500,
  300,
  900
);

// The warn palette is optional (defaults to red).
$genegraphics-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$genegraphics-theme: mat.define-light-theme(
  (
    color: (
      primary: $genegraphics-primary,
      accent: $genegraphics-accent,
      warn: $genegraphics-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($genegraphics-theme);

/* You can add global styles to this file, and also import other style files */

:root {
  --color-primary: #{mat.get-color-from-palette(
      $genegraphics-primary,
      "default"
    )};
  --color-primary-darker: #{mat.get-color-from-palette(
      $genegraphics-primary,
      "darker"
    )};
  --color-warn: #{mat.get-color-from-palette($genegraphics-warn, "default")};
}

html,
body {
  height: 100%;
  margin: 10px;
  font-family: Raleway, "Helvetica Neue", sans-serif;
}

.editor-content {
  display: flex;
  flex-direction: row;
  gap: 0;
  height: 300px;
}

.editor-section {
  position: relative;
  display: flex;
  flex-direction: row;
  border: 1px solid var(--color-primary);
  border-radius: 0.5rem;
  padding: 0.5rem;
  width: fit-content;
  max-width: 1400px;
  gap: 0.5rem;
}

.column {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 0.2rem;

  &:not(.no-width) {
    width: 212px;
  }
}

.row {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  gap: 0.5rem;
}

.title-row {
  display: flex;
  position: relative;
  flex-direction: row;
  justify-content: center;
  height: 52px;

  .title-text {
    text-align: center;
    font-weight: bold;
    padding: 16px;
  }
}

.column-header {
  display: flex;
  justify-content: center;
  min-height: 52px;

  .info-text {
    text-align: center;
    padding-top: 16px;
  }
}

.delete-button-row {
  justify-content: flex-end;
}

.inc-dec-row {
  justify-content: center;
  button {
    background-color: #ffffff;
    width: 28px;
    height: 28px;
    border: 1px solid #e0e0e0;
    border-radius: 4px;

    mat-icon {
      width: 18px;
      height: 18px;
      font-size: 18px;
    }
  }
}

mat-form-field {
  flex-grow: 0;
  height: fit-content;
}

button.centered {
  align-self: center;
}
